name: Polybot Deploy Dev

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      EC2_HOST:
        required: true
      EC2_USERNAME:
        required: true
      TELEGRAM_BOT_TOKEN:
        required: true

  workflow_dispatch:
    inputs:
      image:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USERNAME }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_APP_URL: https://proxydeema.fursa.click

    steps:
      - uses: actions/checkout@v4

      - name: SSH and Deploy
        run: |
          echo "$PRIVATE_KEY" > key.pem
          chmod 400 key.pem

          # ✅ Prepare .env file using substitution
          sed "s|\${IMG_NAME}|${{ inputs.image }}|g" .env.template > .env

          echo "📦 Final local .env content:"
          cat .env

          # ✅ Upload files to EC2
          scp -i key.pem -o StrictHostKeyChecking=no .env $EC2_USER@$EC2_HOST:/home/ubuntu/.env
          scp -i key.pem -o StrictHostKeyChecking=no docker-compose.yaml $EC2_USER@$EC2_HOST:/home/ubuntu/docker-compose.yaml

          # ✅ Run Docker Compose remotely
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/ubuntu

            echo "⚙️ Docker Compose config:"
            docker compose --env-file .env -f docker-compose.yaml config

            docker compose --env-file .env -f docker-compose.yaml pull
            docker compose --env-file .env -f docker-compose.yaml down
            docker compose --env-file .env -f docker-compose.yaml up -d
          EOF

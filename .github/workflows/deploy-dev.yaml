name: Polybot Deploy Dev

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REPO_NAME: PolybotService
      REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug secrets
        run: |
          echo "üß™ EC2_DEV_HOST=${{ secrets.EC2_DEV_HOST }}"
          echo "üß™ EC2_USER=${{ secrets.EC2_USER }}"
          echo "üß™ DEEMA_KEY is set? ${{ secrets.DEEMA_KEY != '' }}"

      - name: Configure SSH access
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEEMA_KEY }}
          EC2_HOST: ${{ secrets.EC2_DEV_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key

          echo "üîç EC2_HOST=$EC2_HOST"
          echo "üîç EC2_USER=$EC2_USER"

          cat > ~/.ssh/config <<EOF
          Host ec2
          HostName ${EC2_HOST}
          User ${EC2_USER}
          IdentityFile ~/.ssh/private_key
          StrictHostKeyChecking no
      

      - name: Clone or pull the repo on EC2
        run: |
          ssh -F ~/.ssh/config ec2 "
            if [ -d ~/polybot-dev ]; then
              echo 'üìÇ Repo exists, pulling latest...'
              cd ~/polybot-dev && git pull
            else
              echo 'üì• Cloning repo...'
              git clone $REPO_URL ~/polybot-dev
            fi
          "

      - name: Deploy Polybot with Docker Compose
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: |
          ssh -F ~/.ssh/config ec2 <<'EOF'
            set -e
            cd ~/polybot-dev

            echo "üíæ Writing .env.dev file..."
            cat <<EOT > .env.dev
            IMG_NAME=${{ inputs.image }}
            TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
            TELEGRAM_APP_URL=https://proxydeema.fursa.click
          EOT

            echo "üê≥ Running Docker Compose..."
            docker compose -f docker-compose.yaml pull
            docker compose -f docker-compose.yaml up -d --remove-orphans
          EOF
